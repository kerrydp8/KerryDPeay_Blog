@model KerryDPeay_Blog.Models.BlogPost

@{
    ViewBag.Title = "Edit";
}

<head>
    <style>
        #scale {
            background: url(https://cdn.shopify.com/s/files/1/0010/0994/2575/products/2066-70-lightblue_0e38026d-498a-45d9-8dcb-5f05f37baa9f_2000x.png?v=1549120526);
            background-repeat: no-repeat;
            background-size: 1800px 1600px;
        }

        .center {
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: 50%;
        }

        .container {
            position: relative;
            text-align: center;
            color: white;
        }

        .centered {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            overflow: hidden;
            background-color: #0000FF;
        }

        li {
            float: left;
        }

            li a {
                display: block;
                color: white;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
            }

                li a:hover {
                    background-color: #111;
                }

               body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, Helvetica, sans-serif;
        }

        .hero-image {
            background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("https://image.flaticon.com/sprites/new_packs/222408-constructions.png");
            height: 50%;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            position: relative;
        }

        .hero-text {
            text-align: center;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
        }

            .hero-text button {
                border: none;
                outline: 0;
                display: inline-block;
                padding: 10px 25px;
                color: black;
                background-color: #ddd;
                text-align: center;
                cursor: pointer;
            }

                .hero-text button:hover {
                    background-color: #555;
                    color: white;
                }
    </style>
</head>

<h1 class="text-center"><b>Edit This Post?</b></h1>


@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<body id="scale">

    @if (User.IsInRole("Admin"))
    {
        <!--Navbar-->
        <ul>
            <li><a class="active" href="@Url.Action("Index", "BlogPosts")">Home</a></li>
            <li><a href="@Url.Action("LogOff", "Account")">Logout</a></li>
            <li><a href="@Url.Action("Contact", "Home")">Contact Me</a></li>
            <li><a href=@Url.Action("AllPosts", "BlogPosts")>All Posts</a></li>
            <li><a href=@Url.Action("Create", "BlogPosts")>Create Post</a></li>
        </ul>
    }

    @if ((User.Identity.IsAuthenticated) && !(User.IsInRole("Admin")))
    {
        <!--Navbar-->
        <ul>
            <li><a class="active" href="@Url.Action("Index", "BlogPosts")">Home</a></li>
            <li><a href="@Url.Action("LogOff", "Account")">Logout</a></li>
            <li><a href="@Url.Action("Contact", "Home")">Contact Me</a></li>
            <li><a href=@Url.Action("AllPosts", "BlogPosts")>All Posts</a></li>
        </ul>
    }

    @if (!(User.Identity.IsAuthenticated))
    {
        <!--Navbar-->

        <ul>
            <li><a class="active" href="@Url.Action("Index", "BlogPosts")">Home</a></li>
            <li><a href="@Url.Action("Login", "Account")">Login</a></li>
            <li><a href="@Url.Action("Contact", "Home")">Contact Me</a></li>
            <li><a href=@Url.Action("AllPosts", "BlogPosts")>All Posts</a></li>
        </ul>
    }

<div class="form-horizontal">
    <!--<h4>BlogPost</h4>-->
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Slug)
    @Html.HiddenFor(model => model.Create)
    @Html.HiddenFor(model => model.Update)
    @Html.HiddenFor(model => model.MediaURL)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", id = "editor" } })
            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Published)
                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="image" type="file" class="form-control" id="fileUpload" />
            @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Create, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Create, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Create, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            <!--Returns the Edit view for the post but upon click, the Create action is used.
            A new title and slug are created and stored, leading to this post replacing
            the former post instead of being added on top.-->
        </div>
    </div>
</div>
</body>

}

<div>
    <button class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>

    <script type="text/javascript">
        tinymce.init({
            selector: '#editor'
        });
    </script>
}
